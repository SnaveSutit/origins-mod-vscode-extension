{
	"type": "object",
	"required": [
		"key"
	],
	"properties": {
		"cooldown": {
			"type": "integer",
			"default": 1,
			"description": "Interval of ticks this power needs to recharge before the power can be triggered again.",
			"markdownDescription": "Interval of ticks this power needs to recharge before the power can be triggered again."
		},
		"hud_render": {
			"$ref": "../../apoli/types/hud_render.json",
			"description": "Determines how the cooldown of this power is visualized on the HUD.",
			"markdownDescription": "Determines how the cooldown of this power is visualized on the HUD."
		},
		"texture_location": {
			"$ref": "../../apoli/types/autocomplete_helpers/texture_location.json",
			"description": "If specified, the texture used for the custom projectile.",
			"markdownDescription": "If specified, the texture used for the custom projectile."
		},
		"texture_url": {
			"type": "string",
			"enum": [
				"texture_location"
			],
			"description": "If specified, the url to a .png file imported into the game as a texture for this power's use. This will be used as a fallback if `texture_location` is not specified or if a texture is not present.",
			"markdownDescription": "If specified, the url to a .png file imported into the game as a texture for this power's use. This will be used as a fallback if `texture_location` is not specified or if a texture is not present."
		},
		"count": {
			"type": "integer",
			"default": 1,
			"description": "The amount of projectiles to fire each use.",
			"markdownDescription": "The amount of projectiles to fire each use."
		},
		"interval": {
			"type": "integer",
			"default": 0,
			"description": "Determines the interval for firing multiple projectiles consecutively (in ticks). If set to 0, it will fire all the projectiles at the same tick.",
			"markdownDescription": "Determines the interval for firing multiple projectiles consecutively (in ticks). If set to 0, it will fire all the projectiles at the same tick."
		},
		"start_delay": {
			"type": "integer",
			"default": 0,
			"description": "Determines how long the start of the firing process is delayed (in ticks).",
			"markdownDescription": "Determines how long the start of the firing process is delayed (in ticks)."
		},
		"speed": {
			"type": "number",
			"default": 1.5,
			"description": "The speed applied to the fired projectile.",
			"markdownDescription": "The speed applied to the fired projectile."
		},
		"divergence": {
			"type": "number",
			"default": 1,
			"description": "How much each projectile fired is affected by random spread.",
			"markdownDescription": "How much each projectile fired is affected by random spread."
		},
		"sound": {
			"$ref": "../../apoli/types/autocomplete_helpers/sound_identifier.json",
			"description": "If set, the sound with this ID will be played when the power is used.",
			"markdownDescription": "If set, the sound with this ID will be played when the power is used."
		},
		"tag": {
			"$ref": "../../apoli/types/nbt.json",
			"description": "NBT data of the entity.",
			"markdownDescription": "NBT data of the entity."
		},
		"entity_action_before_firing": {
			"$ref": "../../apoli/entity_action.json",
			"description": "If specified, the entity action to execute on the entity firing the projectile just prior to the projectile being created.",
			"markdownDescription": "If specified, the entity action to execute on the entity firing the projectile just prior to the projectile being created."
		},
		"bientity_action_after_firing": {
			"$ref": "../../apoli/bientity_action.json",
			"description": "If specified, the bi-entity action to execute with the projectile owner the actor, and the projectile as the target as soon as the projectile is created.",
			"markdownDescription": "If specified, the bi-entity action to execute with the projectile owner the actor, and the projectile as the target as soon as the projectile is created."
		},
		"block_action_on_hit": {
			"$ref": "../../apoli/block_action.json",
			"description": "If specified, the block action to execute on the block the projectile lands on upon having it land on it.",
			"markdownDescription": "If specified, the block action to execute on the block the projectile lands on upon having it land on it."
		},
		"bientity_action_on_miss": {
			"$ref": "../../apoli/bientity_action.json",
			"description": "If specified, the bi-entity action to execute with the projectile owner as the actor, and the projectile as the target upon missing.",
			"markdownDescription": "If specified, the bi-entity action to execute with the projectile owner as the actor, and the projectile as the target upon missing."
		},
		"bientity_action_on_hit": {
			"$ref": "../../apoli/bientity_action.json",
			"description": "If specified, the bi-entity action to execute with the projectile as the actor, and the hit entity as the target upon hitting an entity.",
			"markdownDescription": "If specified, the bi-entity action to execute with the projectile as the actor, and the hit entity as the target upon hitting an entity."
		},
		"owner_target_bientity_action_on_hit": {
			"$ref": "../../apoli/bientity_action.json",
			"description": "If specified, the bi-entity action to execute with the projectile owner as the actor, and the hit entity as the target upon hitting an entity.",
			"markdownDescription": "If specified, the bi-entity action to execute with the projectile owner as the actor, and the hit entity as the target upon hitting an entity."
		},
		"allow_conditional_cancelling": {
			"type": "boolean",
			"default": false,
			"description": "Determines if extra projectiles will no longer be fired as soon as the entity no longer meets this power's condition.",
			"markdownDescription": "Determines if extra projectiles will no longer be fired as soon as the entity no longer meets this power's condition."
		},
		"block_action_cancels_miss_action": {
			"default": "false",
			"$ref": "../../apoli/block_action.json",
			"description": "Determines if the `block_action_on_hit` action will cancel the `bientity_action_on_miss` action.",
			"markdownDescription": "Determines if the `block_action_on_hit` action will cancel the `bientity_action_on_miss` action."
		},
		"block_condition": {
			"$ref": "../../apoli/block_condition.json",
			"description": "If specified, the block condition that the block targeted by the `block_action_on_hit` field must meet in order for that to run.",
			"markdownDescription": "If specified, the block condition that the block targeted by the `block_action_on_hit` field must meet in order for that to run."
		},
		"bientity_condition": {
			"$ref": "../../apoli/bientity_condition.json",
			"description": "If specified, the bi-entity condition with the projectile as the actor and the target as the target for the projectile to actually hit the target instead of pass through.",
			"markdownDescription": "If specified, the bi-entity condition with the projectile as the actor and the target as the target for the projectile to actually hit the target instead of pass through."
		},
		"owner_bientity_condition": {
			"$ref": "../../apoli/bientity_condition.json",
			"description": "If specified, the bi-entity condition with the projectile owner as the actor and the target as the target for the projectile to actually hit the target instead of pass through.",
			"markdownDescription": "If specified, the bi-entity condition with the projectile owner as the actor and the target as the target for the projectile to actually hit the target instead of pass through."
		},
		"tick_bientity_action": {
			"$ref": "../../apoli/bientity_action.json",
			"description": "If specified, the bi-entity action with the projectile owner as the actor, and the projectile as the target that is run each tick of the projectile's lifespan.",
			"markdownDescription": "If specified, the bi-entity action with the projectile owner as the actor, and the projectile as the target that is run each tick of the projectile's lifespan."
		},
		"key": {
			"$ref": "../../apoli/types/key.json",
			"description": "Which active key this power should respond to.",
			"markdownDescription": "Which active key this power should respond to."
		},
		"type": {
			"description": "\n\n[Power Type](../power_types.md)\n\nFires a projectile that is customisable by the fields of the power type.\n\nType ID: `apugli:custom_projectile`\n\n\n",
			"markdownDescription": "\n\n[Power Type](../power_types.md)\n\nFires a projectile that is customisable by the fields of the power type.\n\nType ID: `apugli:custom_projectile`\n\n\n"
		}
	}
}