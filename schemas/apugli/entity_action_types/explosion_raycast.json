{
	"type": "object",
	"required": [
		"power"
	],
	"properties": {
		"type": {
			"description": "### ⚠️ Requires [Apugli](https://apugli.readthedocs.io/en/latest/) to be installed! ⚠️\n\n## Explosion Raycast\n\n---\n\n\n\n[Entity Action Type](https://apugli.readthedocs.io/en/latest/types/entity_action_types/explosion_raycast)\n\nRaycasts and summons an explosion at the hit location.\n\nType ID: `apugli:explosion_raycast`\n\n\n\n\n---\n\n",
			"markdownDescription": "### ⚠️ Requires [Apugli](https://apugli.readthedocs.io/en/latest/) to be installed! ⚠️\n\n## Explosion Raycast\n\n---\n\n\n\n[Entity Action Type](https://apugli.readthedocs.io/en/latest/types/entity_action_types/explosion_raycast)\n\nRaycasts and summons an explosion at the hit location.\n\nType ID: `apugli:explosion_raycast`\n\n\n\n\n---\n\n"
		},
		"particle": {
			"$ref": "../../apoli/types/particle_effect.json",
			"description": "If set, the particle effect that is displayed on the ray.",
			"markdownDescription": "If set, the particle effect that is displayed on the ray."
		},
		"spacing": {
			"type": "number",
			"default": 0.5,
			"description": "If there is a particle effect, the spacing between the particles displayed on the ray.",
			"markdownDescription": "If there is a particle effect, the spacing between the particles displayed on the ray."
		},
		"direction": {
			"$ref": "../../apoli/types/vector.json",
			"description": "If specified, the direction in which the raycast will travel in.",
			"markdownDescription": "If specified, the direction in which the raycast will travel in."
		},
		"space": {
			"default": "world",
			"$ref": "../../apoli/types/space.json",
			"description": "If `direction` is specified, the [Space](https://apugli.readthedocs.io/en/latest/types/entity_action_types/explosion_raycast) to perform the raycast in.",
			"markdownDescription": "If `direction` is specified, the [Space](https://apugli.readthedocs.io/en/latest/types/entity_action_types/explosion_raycast) to perform the raycast in."
		},
		"power": {
			"type": "number",
			"description": "Determines the power of the explosion.",
			"markdownDescription": "Determines the power of the explosion."
		},
		"block_action": {
			"$ref": "../../apoli/block_action.json",
			"description": "If set, the block action(s) to be executed on the block the entity has targeted.",
			"markdownDescription": "If set, the block action(s) to be executed on the block the entity has targeted."
		},
		"bientity_action": {
			"$ref": "../../apoli/bientity_action.json",
			"description": "If set, the bi-entity action(s) to be executed on the target entity with the entity that initiated the raycast as the actor and the entity targeted by the raycast as the target.",
			"markdownDescription": "If set, the bi-entity action(s) to be executed on the target entity with the entity that initiated the raycast as the actor and the entity targeted by the raycast as the target."
		},
		"action_on_hit": {
			"$ref": "../../apoli/entity_action.json",
			"description": "If set, the entity action(s) to execute upon hitting a block or entity with the raycast. ",
			"markdownDescription": "If set, the entity action(s) to execute upon hitting a block or entity with the raycast. "
		},
		"destruction_type": {
			"type": "string",
			"default": "break",
			"enum": [
				"destroy",
				"break",
				"none"
			],
			"description": "Determines if the explosion should destroy the terrain, destroy the terrain and drop the loot of the blocks, or none (`\"destroy\"`, `\"break\"` or `\"none\"` respectively).",
			"markdownDescription": "Determines if the explosion should destroy the terrain, destroy the terrain and drop the loot of the blocks, or none (`\"destroy\"`, `\"break\"` or `\"none\"` respectively)."
		},
		"damage_self": {
			"type": "boolean",
			"default": true,
			"description": "Determines if the player should take damage from the summoned explosion.",
			"markdownDescription": "Determines if the player should take damage from the summoned explosion."
		},
		"indestructible": {
			"$ref": "../../apoli/block_condition.json",
			"description": "If specified, the blocks that fulfills the specified block condition type is not destroyed by the summoned explosion.",
			"markdownDescription": "If specified, the blocks that fulfills the specified block condition type is not destroyed by the summoned explosion."
		},
		"destructible": {
			"$ref": "../../apoli/block_condition.json",
			"description": "If specified, the blocks that fulfills this specified block condition type are the *_only_* blocks that are destroyed by the summoned explosion.",
			"markdownDescription": "If specified, the blocks that fulfills this specified block condition type are the *_only_* blocks that are destroyed by the summoned explosion."
		},
		"create_fire": {
			"type": "boolean",
			"default": false,
			"description": "Determines if the explosion should create fire.",
			"markdownDescription": "Determines if the explosion should create fire."
		},
		"damage_modifier": {
			"$ref": "../../apoli/types/attribute_modifier.json",
			"description": "If set, this modifier will apply to the damage value towards other entities from this explosion.",
			"markdownDescription": "If set, this modifier will apply to the damage value towards other entities from this explosion."
		},
		"damage_modifiers": {
			"type": "array",
			"items": {
				"$ref": "../../apoli/types/attribute_modifier.json"
			},
			"description": "If set, these modifiers will apply to the damage value towards other entities from this explosion.",
			"markdownDescription": "If set, these modifiers will apply to the damage value towards other entities from this explosion."
		},
		"knockback_modifier": {
			"$ref": "../../apoli/types/attribute_modifier.json",
			"description": "If set, this modifier will apply to the knockback towards other entities from this explosion.",
			"markdownDescription": "If set, this modifier will apply to the knockback towards other entities from this explosion."
		},
		"knockback_modifiers": {
			"type": "array",
			"items": {
				"$ref": "../../apoli/types/attribute_modifier.json"
			},
			"description": "If set, these modifiers will apply to the knockback towards other entities from this explosion.",
			"markdownDescription": "If set, these modifiers will apply to the knockback towards other entities from this explosion."
		},
		"volume_modifier": {
			"$ref": "../../apoli/types/attribute_modifier.json",
			"description": "If set, this modifier will apply to the volume of the sound event from this explosion.",
			"markdownDescription": "If set, this modifier will apply to the volume of the sound event from this explosion."
		},
		"volume_modifiers": {
			"type": "array",
			"items": {
				"$ref": "../../apoli/types/attribute_modifier.json"
			},
			"description": "If set, these modifiers will apply to the volume of the sound event from this explosion.",
			"markdownDescription": "If set, these modifiers will apply to the volume of the sound event from this explosion."
		},
		"pitch_modifier": {
			"$ref": "../../apoli/types/attribute_modifier.json",
			"description": "If set, this modifier will apply to the pitch of the sound event from this explosion.",
			"markdownDescription": "If set, this modifier will apply to the pitch of the sound event from this explosion."
		},
		"pitch_modifiers": {
			"type": "array",
			"items": {
				"$ref": "../../apoli/types/attribute_modifier.json"
			},
			"description": "If set, these modifiers will apply to the pitch of the sound event from this explosion.",
			"markdownDescription": "If set, these modifiers will apply to the pitch of the sound event from this explosion."
		},
		"targetable_bientity_condition": {
			"$ref": "../../apoli/bientity_condition.json",
			"description": "If set, determines if an entity may be targeted by the raycast with the entity that initiated the raycast as the actor and the raycast target as the target.",
			"markdownDescription": "If set, determines if an entity may be targeted by the raycast with the entity that initiated the raycast as the actor and the raycast target as the target."
		},
		"explosion_damage_bientity_condition": {
			"$ref": "../../apoli/bientity_condition.json",
			"description": "If set, determines if an entity will be damaged by the explosion with the entity that initiated the raycast as the actor and the entity in the explosion radius as the target.",
			"markdownDescription": "If set, determines if an entity will be damaged by the explosion with the entity that initiated the raycast as the actor and the entity in the explosion radius as the target."
		},
		"charged_condition": {
			"$ref": "../../apoli/entity_condition.json",
			"description": "If set, determined when the `charged_modifier` and `charged_modifiers` fields will be used. ",
			"markdownDescription": "If set, determined when the `charged_modifier` and `charged_modifiers` fields will be used. "
		},
		"charged_modifier": {
			"$ref": "../../apoli/types/attribute_modifier.json",
			"description": "If set, this modifier will apply to the power of the explosion when the `charged_condition` is met.",
			"markdownDescription": "If set, this modifier will apply to the power of the explosion when the `charged_condition` is met."
		},
		"charged_modifiers": {
			"type": "array",
			"items": {
				"$ref": "../../apoli/types/attribute_modifier.json"
			},
			"description": "If set, these modifiers will apply to the power of the explosion when the `charged_condition` is met.",
			"markdownDescription": "If set, these modifiers will apply to the power of the explosion when the `charged_condition` is met."
		}
	}
}