{
	"type": "object",
	"required": [
		"actions"
	],
	"properties": {
		"actions": {
			"type": "array",
			"items": {
				"type": "object",
				"required": [
					"element",
					"weight"
				],
				"properties": {
					"element": {
						"$ref": "$actionRef"
					},
					"weight": {
						"type": "number"
					}
				}
			},
			"description": "Each object has to have an `element` [Action](https://origins.readthedocs.io/en/latest/types/meta_action_types/choice) and a `weight` [Integer](https://origins.readthedocs.io/en/latest/types/meta_action_types/choice).",
			"markdownDescription": "Each object has to have an `element` [Action](https://origins.readthedocs.io/en/latest/types/meta_action_types/choice) and a `weight` [Integer](https://origins.readthedocs.io/en/latest/types/meta_action_types/choice)."
		},
		"type": {
			"description": "## Choice\n\n---\n\n\n\n[Meta Action Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/choice)\n\nExecutes one of the provided actions, choosing randomly based on the assigned weights. The actions with higher weight values are more likely to be chosen.\n\nType ID: `origins:choice`\n\n\n\n---\n\n### üìù Note\n\nThe chance of the object is determined by dividing the weight of the object to the sum of all weights of all the objects (`weight / sumOfAllWeights = chance`).\n\n\n\n\n\n\n---\n\n### Examples\n\n```json\n\"entity_action\": {\n    \"type\": \"origins:choice\",\n    \"actions\": [\n        {\n            \"element\": {\n                \"type\": \"origins:exhaust\",\n                \"amount\": 0.5\n            },\n            \"weight\": 10\n        },\n        {\n            \"element\": {    \n            \"type\": \"origins:apply_effect\",\n                \"effect\": {\n                    \"effect\": \"minecraft:regeneration\",\n                    \"amplifier\": 1,\n                    \"duration\": 100\n                }\n            },\n            \"weight\": 10\n        },\n        {\n            \"element\": {\n                \"type\": \"origins:set_on_fire\",\n                \"duration\": 8\n            },\n            \"weight\": 20\n        }\n    ]\n}\n```\n\nThis example has multiple entity action types with different weights: one with a 25% chance of applying exhaustion with a value of `0.5` to the player, another with a 25% chance of applying a Regeneration II status effect that would last for 5 seconds, and another one with a 50% of setting the entity on fire for 8 seconds.\n",
			"markdownDescription": "undefined## Choice\n\n---\n\n\n\n[Meta Action Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/choice)\n\nExecutes one of the provided actions, choosing randomly based on the assigned weights. The actions with higher weight values are more likely to be chosen.\n\nType ID: `origins:choice`\n\n\n\n---\n\n### üìù Note\n\nThe chance of the object is determined by dividing the weight of the object to the sum of all weights of all the objects (`weight / sumOfAllWeights = chance`).\n\n\n\n\n\n\n---\n\n### Examples\n\n```json\n\"entity_action\": {\n    \"type\": \"origins:choice\",\n    \"actions\": [\n        {\n            \"element\": {\n                \"type\": \"origins:exhaust\",\n                \"amount\": 0.5\n            },\n            \"weight\": 10\n        },\n        {\n            \"element\": {    \n            \"type\": \"origins:apply_effect\",\n                \"effect\": {\n                    \"effect\": \"minecraft:regeneration\",\n                    \"amplifier\": 1,\n                    \"duration\": 100\n                }\n            },\n            \"weight\": 10\n        },\n        {\n            \"element\": {\n                \"type\": \"origins:set_on_fire\",\n                \"duration\": 8\n            },\n            \"weight\": 20\n        }\n    ]\n}\n```\n\nThis example has multiple entity action types with different weights: one with a 25% chance of applying exhaustion with a value of `0.5` to the player, another with a 25% chance of applying a Regeneration II status effect that would last for 5 seconds, and another one with a 50% of setting the entity on fire for 8 seconds.\n"
		}
	}
}