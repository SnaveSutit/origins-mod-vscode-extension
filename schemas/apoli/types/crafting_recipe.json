{
	"type": "object",
	"required": [
		"type",
		"id",
		"result"
	],
	"properties": {
		"id": {
			"$ref": "identifier.json",
			"description": "An ID for this recipe. Has to be unique among all recipes, otherwise there will be a conflict.",
			"markdownDescription": "An ID for this recipe. Has to be unique among all recipes, otherwise there will be a conflict."
		},
		"result": {
			"type": "object",
			"required": [
				"item"
			],
			"properties": {
				"item": {
					"$ref": "autocomplete_helpers/item_identifier.json"
				},
				"count": {
					"type": "integer",
					"minimum": 1
				}
			},
			"description": "The result of the crafting. __Note that vanilla does *not* support NBT tags in the result.__",
			"markdownDescription": "The result of the crafting. __Note that vanilla does *not* support NBT tags in the result.__"
		}
	},
	"allOf": [
		{
			"if": {
				"properties": {
					"type": {
						"enum": [
							"apoli:crafting_shaped",
							"origins:crafting_shaped"
						],
						"description": "The type of recipe. Either `minecraft:crafting_shaped` or `minecraft:crafting_shapeless`. Other recipe types are not supported.",
						"markdownDescription": "The type of recipe. Either `minecraft:crafting_shaped` or `minecraft:crafting_shapeless`. Other recipe types are not supported."
					}
				}
			},
			"then": {
				"required": [
					"pattern",
					"key"
				],
				"properties": {
					"pattern": {
						"type": "array",
						"items": {
							"type": "string",
							"pattern": "^.{1,3}$"
						},
						"description": "Specifies the pattern, with each element representing one row. Use a single character to describe one item. A space means that position is empty.",
						"markdownDescription": "Specifies the pattern, with each element representing one row. Use a single character to describe one item. A space means that position is empty."
					},
					"key": {
						"type": "object",
						"patternProperties": {
							"^.$": {
								"$ref": "ingredient.json"
							}
						},
						"description": "Specifies which character in the pattern corresponds to which [Ingredient](https://origins.readthedocs.io/en/latest/types/data_types/crafting_recipe).",
						"markdownDescription": "Specifies which character in the pattern corresponds to which [Ingredient](https://origins.readthedocs.io/en/latest/types/data_types/crafting_recipe)."
					}
				}
			}
		},
		{
			"if": {
				"properties": {
					"type": {
						"enum": [
							"apoli:crafting_shapeless",
							"origins:crafting_shapeless"
						],
						"description": "The type of recipe. Either `minecraft:crafting_shaped` or `minecraft:crafting_shapeless`. Other recipe types are not supported.",
						"markdownDescription": "The type of recipe. Either `minecraft:crafting_shaped` or `minecraft:crafting_shapeless`. Other recipe types are not supported."
					}
				}
			},
			"then": {
				"required": [
					"ingredients"
				],
				"properties": {
					"ingredients": {
						"type": "array",
						"items": {
							"oneOf": [
								{
									"$ref": "ingredient.json"
								},
								{
									"type": "array",
									"items": {
										"$ref": "ingredient.json"
									}
								}
							]
						},
						"description": "The items that need to be put in the crafting grid for the recipe.",
						"markdownDescription": "The items that need to be put in the crafting grid for the recipe."
					}
				}
			}
		}
	]
}