{
	"type": "object",
	"required": [
		"type"
	],
	"allOf": [
		{
			"if": {
				"required": [
					"type"
				],
				"properties": {
					"type": {
						"enum": [
							"apoli:add_block",
							"origins:add_block"
						]
					}
				}
			},
			"then": {
				"$ref": "block_action_types/add_block.json"
			}
		},
		{
			"if": {
				"required": [
					"type"
				],
				"properties": {
					"type": {
						"enum": [
							"apoli:area_of_effect",
							"origins:area_of_effect"
						]
					}
				}
			},
			"then": {
				"$ref": "block_action_types/area_of_effect.json"
			}
		},
		{
			"if": {
				"required": [
					"type"
				],
				"properties": {
					"type": {
						"enum": [
							"apoli:bonemeal",
							"origins:bonemeal"
						]
					}
				}
			},
			"then": {
				"$ref": "block_action_types/bonemeal.json"
			}
		},
		{
			"if": {
				"required": [
					"type"
				],
				"properties": {
					"type": {
						"enum": [
							"apoli:execute_command",
							"origins:execute_command"
						]
					}
				}
			},
			"then": {
				"$ref": "block_action_types/execute_command.json"
			}
		},
		{
			"if": {
				"required": [
					"type"
				],
				"properties": {
					"type": {
						"enum": [
							"apoli:explode",
							"origins:explode"
						]
					}
				}
			},
			"then": {
				"$ref": "block_action_types/explode.json"
			}
		},
		{
			"if": {
				"required": [
					"type"
				],
				"properties": {
					"type": {
						"enum": [
							"apoli:modify_block_state",
							"origins:modify_block_state"
						]
					}
				}
			},
			"then": {
				"$ref": "block_action_types/modify_block_state.json"
			}
		},
		{
			"if": {
				"required": [
					"type"
				],
				"properties": {
					"type": {
						"enum": [
							"apoli:offset",
							"origins:offset"
						]
					}
				}
			},
			"then": {
				"$ref": "block_action_types/offset.json"
			}
		},
		{
			"if": {
				"required": [
					"type"
				],
				"properties": {
					"type": {
						"enum": [
							"apoli:set_block",
							"origins:set_block"
						]
					}
				}
			},
			"then": {
				"$ref": "block_action_types/set_block.json"
			}
		},
		{
			"if": {
				"required": [
					"type"
				],
				"properties": {
					"type": {
						"enum": [
							"apoli:spawn_entity",
							"origins:spawn_entity"
						]
					}
				}
			},
			"then": {
				"$ref": "block_action_types/spawn_entity.json"
			}
		},
		{
			"if": {
				"required": [
					"type"
				],
				"properties": {
					"type": {
						"enum": [
							"apoli:and",
							"origins:and"
						]
					}
				}
			},
			"then": {
				"type": "object",
				"required": [
					"actions"
				],
				"properties": {
					"actions": {
						"type": "array",
						"items": {
							"$ref": "#"
						},
						"description": "These actions will be executed one after the other (but in the same tick).",
						"markdownDescription": "These actions will be executed one after the other (but in the same tick)."
					},
					"type": {
						"description": "## And\n\n---\n\n\n\n[Meta Action Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/and)\n\nExecutes all provided actions in order.\n\nType ID: `origins:and`\n\n\n\n\n---\n\n### Examples\n\n```json\n\"entity_action\": {\n    \"type\": \"origins:and\",\n    \"actions\": [\n        {\n            \"type\": \"origins:exhaust\",\n            \"amount\": 0.5\n        },\n        {    \n            \"type\": \"origins:apply_effect\",\n            \"effect\": {\n            \"effect\": \"minecraft:regeneration\",\n            \"amplifier\": 1,\n            \"duration\": 100\n            }\n        }\n    ]\n}\n```\n\nThis example will apply exhaustion with a value of 0.5 to the player, and apply a Regeneration II status effect that would last for 5 seconds.\n",
						"markdownDescription": "undefined## And\n\n---\n\n\n\n[Meta Action Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/and)\n\nExecutes all provided actions in order.\n\nType ID: `origins:and`\n\n\n\n\n---\n\n### Examples\n\n```json\n\"entity_action\": {\n    \"type\": \"origins:and\",\n    \"actions\": [\n        {\n            \"type\": \"origins:exhaust\",\n            \"amount\": 0.5\n        },\n        {    \n            \"type\": \"origins:apply_effect\",\n            \"effect\": {\n            \"effect\": \"minecraft:regeneration\",\n            \"amplifier\": 1,\n            \"duration\": 100\n            }\n        }\n    ]\n}\n```\n\nThis example will apply exhaustion with a value of 0.5 to the player, and apply a Regeneration II status effect that would last for 5 seconds.\n"
					}
				}
			}
		},
		{
			"if": {
				"required": [
					"type"
				],
				"properties": {
					"type": {
						"enum": [
							"apoli:chance",
							"origins:chance"
						]
					}
				}
			},
			"then": {
				"type": "object",
				"required": [
					"action",
					"chance"
				],
				"properties": {
					"action": {
						"$ref": "#",
						"description": "The action which might be executed.",
						"markdownDescription": "The action which might be executed."
					},
					"chance": {
						"type": "number",
						"description": "The chance that the action will execute, from 0 to 1. (E.g. 0.1 means 10% chance, 0.95 means 95% chance).",
						"markdownDescription": "The chance that the action will execute, from 0 to 1. (E.g. 0.1 means 10% chance, 0.95 means 95% chance)."
					},
					"fail_action": {
						"$ref": "#",
						"description": "The action to execute if the specified action in the `action` field is not executed.",
						"markdownDescription": "The action to execute if the specified action in the `action` field is not executed."
					},
					"type": {
						"description": "## Chance\n\n---\n\n\n\n[Meta Action Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/chance)\n\nExecutes the provided action only with a specific chance.\n\nType ID: `origins:chance`\n\n\n\n\n---\n\n### Examples\n\n```json\n\"entity_action\": {\n    \"type\": \"origins:chance\",\n    \"action\": {\n        \"type\": \"origins:set_on_fire\",\n        \"duration\": 5\n    },\n    \"chance\": 0.4\n}\n```\n\nThis example has a 40% chance to set the entity on fire for 5 seconds.\n",
						"markdownDescription": "undefined## Chance\n\n---\n\n\n\n[Meta Action Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/chance)\n\nExecutes the provided action only with a specific chance.\n\nType ID: `origins:chance`\n\n\n\n\n---\n\n### Examples\n\n```json\n\"entity_action\": {\n    \"type\": \"origins:chance\",\n    \"action\": {\n        \"type\": \"origins:set_on_fire\",\n        \"duration\": 5\n    },\n    \"chance\": 0.4\n}\n```\n\nThis example has a 40% chance to set the entity on fire for 5 seconds.\n"
					}
				}
			}
		},
		{
			"if": {
				"required": [
					"type"
				],
				"properties": {
					"type": {
						"enum": [
							"apoli:choice",
							"origins:choice"
						]
					}
				}
			},
			"then": {
				"type": "object",
				"required": [
					"actions"
				],
				"properties": {
					"actions": {
						"type": "array",
						"items": {
							"type": "object",
							"required": [
								"element",
								"weight"
							],
							"properties": {
								"element": {
									"$ref": "#"
								},
								"weight": {
									"type": "number"
								}
							}
						},
						"description": "Each object has to have an `element` [Action](https://origins.readthedocs.io/en/latest/types/meta_action_types/choice) and a `weight` [Integer](https://origins.readthedocs.io/en/latest/types/meta_action_types/choice).",
						"markdownDescription": "Each object has to have an `element` [Action](https://origins.readthedocs.io/en/latest/types/meta_action_types/choice) and a `weight` [Integer](https://origins.readthedocs.io/en/latest/types/meta_action_types/choice)."
					},
					"type": {
						"description": "## Choice\n\n---\n\n\n\n[Meta Action Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/choice)\n\nExecutes one of the provided actions, choosing randomly based on the assigned weights. The actions with higher weight values are more likely to be chosen.\n\nType ID: `origins:choice`\n\n\n\n---\n\n### üìù Note\n\nThe chance of the object is determined by dividing the weight of the object to the sum of all weights of all the objects (`weight / sumOfAllWeights = chance`).\n\n\n\n\n\n\n---\n\n### Examples\n\n```json\n\"entity_action\": {\n    \"type\": \"origins:choice\",\n    \"actions\": [\n        {\n            \"element\": {\n                \"type\": \"origins:exhaust\",\n                \"amount\": 0.5\n            },\n            \"weight\": 10\n        },\n        {\n            \"element\": {    \n            \"type\": \"origins:apply_effect\",\n                \"effect\": {\n                    \"effect\": \"minecraft:regeneration\",\n                    \"amplifier\": 1,\n                    \"duration\": 100\n                }\n            },\n            \"weight\": 10\n        },\n        {\n            \"element\": {\n                \"type\": \"origins:set_on_fire\",\n                \"duration\": 8\n            },\n            \"weight\": 20\n        }\n    ]\n}\n```\n\nThis example has multiple entity action types with different weights: one with a 25% chance of applying exhaustion with a value of `0.5` to the player, another with a 25% chance of applying a Regeneration II status effect that would last for 5 seconds, and another one with a 50% of setting the entity on fire for 8 seconds.\n",
						"markdownDescription": "undefined## Choice\n\n---\n\n\n\n[Meta Action Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/choice)\n\nExecutes one of the provided actions, choosing randomly based on the assigned weights. The actions with higher weight values are more likely to be chosen.\n\nType ID: `origins:choice`\n\n\n\n---\n\n### üìù Note\n\nThe chance of the object is determined by dividing the weight of the object to the sum of all weights of all the objects (`weight / sumOfAllWeights = chance`).\n\n\n\n\n\n\n---\n\n### Examples\n\n```json\n\"entity_action\": {\n    \"type\": \"origins:choice\",\n    \"actions\": [\n        {\n            \"element\": {\n                \"type\": \"origins:exhaust\",\n                \"amount\": 0.5\n            },\n            \"weight\": 10\n        },\n        {\n            \"element\": {    \n            \"type\": \"origins:apply_effect\",\n                \"effect\": {\n                    \"effect\": \"minecraft:regeneration\",\n                    \"amplifier\": 1,\n                    \"duration\": 100\n                }\n            },\n            \"weight\": 10\n        },\n        {\n            \"element\": {\n                \"type\": \"origins:set_on_fire\",\n                \"duration\": 8\n            },\n            \"weight\": 20\n        }\n    ]\n}\n```\n\nThis example has multiple entity action types with different weights: one with a 25% chance of applying exhaustion with a value of `0.5` to the player, another with a 25% chance of applying a Regeneration II status effect that would last for 5 seconds, and another one with a 50% of setting the entity on fire for 8 seconds.\n"
					}
				}
			}
		},
		{
			"if": {
				"required": [
					"type"
				],
				"properties": {
					"type": {
						"enum": [
							"apoli:delay",
							"origins:delay"
						]
					}
				}
			},
			"then": {
				"type": "object",
				"required": [
					"action",
					"ticks"
				],
				"properties": {
					"action": {
						"$ref": "#",
						"description": "The action which will be executed after the delay.",
						"markdownDescription": "The action which will be executed after the delay."
					},
					"ticks": {
						"type": "integer",
						"description": "The amount of ticks until the action is executed.",
						"markdownDescription": "The amount of ticks until the action is executed."
					},
					"type": {
						"description": "## Delay\n\n---\n\n\n\n[Meta Action Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/delay)\n\nExecutes the provided action after a set amount of ticks.\n\nType ID: `origins:delay`\n\n\n\n---\n\n### ‚ö†Ô∏è Caution\n\nDelaying an action for more than a few ticks is not recommended! This meta action type is not reliable for such task.\n\n\n\n    If you want to delay an action type *reliably,* you can use a power that would use the [Cooldown (Power Type)](https://origins.readthedocs.io/en/latest/types/meta_action_types/delay) and trigger that power with the [Trigger Cooldown (Entity Action Type)](https://origins.readthedocs.io/en/latest/types/meta_action_types/delay).\n\n    You can then use another power that would use the [Action Over Time (Power Type)](https://origins.readthedocs.io/en/latest/types/meta_action_types/delay) and check if the value of the power that would use the [Cooldown (Power Type)](https://origins.readthedocs.io/en/latest/types/meta_action_types/delay) is `\"==\"` to `0` using the [Resource (Entity Condition Type)](https://origins.readthedocs.io/en/latest/types/meta_action_types/delay).\n\n\n\n\n---\n\n### Examples\n\n```json\n\"entity_action\": {\n    \"type\": \"origins:delay\",\n    \"ticks\": 20,\n    \"action\": {\n        \"type\": \"origins:apply_effect\",\n        \"effect\": {\n            \"effect\": \"minecraft:speed\",\n            \"amplifier\": 1,\n            \"duration\": 80\n        }\n    }\n}\n```\nThis example will apply a Speed II status effect after 1 second.\n",
						"markdownDescription": "undefined## Delay\n\n---\n\n\n\n[Meta Action Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/delay)\n\nExecutes the provided action after a set amount of ticks.\n\nType ID: `origins:delay`\n\n\n\n---\n\n### ‚ö†Ô∏è Caution\n\nDelaying an action for more than a few ticks is not recommended! This meta action type is not reliable for such task.\n\n\n\n    If you want to delay an action type *reliably,* you can use a power that would use the [Cooldown (Power Type)](https://origins.readthedocs.io/en/latest/types/meta_action_types/delay) and trigger that power with the [Trigger Cooldown (Entity Action Type)](https://origins.readthedocs.io/en/latest/types/meta_action_types/delay).\n\n    You can then use another power that would use the [Action Over Time (Power Type)](https://origins.readthedocs.io/en/latest/types/meta_action_types/delay) and check if the value of the power that would use the [Cooldown (Power Type)](https://origins.readthedocs.io/en/latest/types/meta_action_types/delay) is `\"==\"` to `0` using the [Resource (Entity Condition Type)](https://origins.readthedocs.io/en/latest/types/meta_action_types/delay).\n\n\n\n\n---\n\n### Examples\n\n```json\n\"entity_action\": {\n    \"type\": \"origins:delay\",\n    \"ticks\": 20,\n    \"action\": {\n        \"type\": \"origins:apply_effect\",\n        \"effect\": {\n            \"effect\": \"minecraft:speed\",\n            \"amplifier\": 1,\n            \"duration\": 80\n        }\n    }\n}\n```\nThis example will apply a Speed II status effect after 1 second.\n"
					}
				}
			}
		},
		{
			"if": {
				"required": [
					"type"
				],
				"properties": {
					"type": {
						"enum": [
							"apoli:if_else",
							"origins:if_else"
						]
					}
				}
			},
			"then": {
				"type": "object",
				"required": [
					"condition",
					"if_action"
				],
				"properties": {
					"condition": {
						"$ref": "block_condition.json",
						"description": "A condition based on the type of action.",
						"markdownDescription": "A condition based on the type of action."
					},
					"if_action": {
						"$ref": "#",
						"description": "The action which is executed when the condition evaluates to true.",
						"markdownDescription": "The action which is executed when the condition evaluates to true."
					},
					"else_action": {
						"$ref": "#",
						"description": "If present, this action will be executed when the condition evaluates to false.",
						"markdownDescription": "If present, this action will be executed when the condition evaluates to false."
					},
					"type": {
						"description": "## If-Else\n\n---\n\n\n\n[Meta Action Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/if_else)\n\nExecutes an action only if a condition holds, and optionally executes another action when it doesn't hold.\n\nType ID: `origins:if_else`\n\n\n\n---\n\n### üìù Note\n\nDepending on the condition type, a different action type is expected:\n\n\n\n    Action Type | Condition Type\n    ------------|----------------\n    [Bi-entity Action Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/if_else) | [Bi-entity Condition Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/if_else)\n    [Entity Action Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/if_else) | [Entity Condition Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/if_else)\n    [Block Action Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/if_else) | [Block Condition Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/if_else)\n    [Item Action Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/if_else) | [Item Condition Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/if_else)\n\n\n\n\n---\n\n### Examples\n\n```json\n\"entity_action\": {\n    \"type\": \"origins:if_else\",\n    \"condition\": {\n        \"type\": \"origins:fall_flying\"\n    },\n    \"if_action\": {\n        \"type\": \"origins:set_on_fire\",\n        \"duration\": 5\n    },\n    \"else_action\": {\n        \"type\": \"origins:heal\",\n        \"amount\": 6\n    }\n}\n```\n\nThis example will set the entity on fire for 5 seconds if they are \"fall flying\". Otherwise, it will restore 3 hearts of health to the entity instead.\n",
						"markdownDescription": "undefined## If-Else\n\n---\n\n\n\n[Meta Action Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/if_else)\n\nExecutes an action only if a condition holds, and optionally executes another action when it doesn't hold.\n\nType ID: `origins:if_else`\n\n\n\n---\n\n### üìù Note\n\nDepending on the condition type, a different action type is expected:\n\n\n\n    Action Type | Condition Type\n    ------------|----------------\n    [Bi-entity Action Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/if_else) | [Bi-entity Condition Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/if_else)\n    [Entity Action Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/if_else) | [Entity Condition Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/if_else)\n    [Block Action Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/if_else) | [Block Condition Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/if_else)\n    [Item Action Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/if_else) | [Item Condition Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/if_else)\n\n\n\n\n---\n\n### Examples\n\n```json\n\"entity_action\": {\n    \"type\": \"origins:if_else\",\n    \"condition\": {\n        \"type\": \"origins:fall_flying\"\n    },\n    \"if_action\": {\n        \"type\": \"origins:set_on_fire\",\n        \"duration\": 5\n    },\n    \"else_action\": {\n        \"type\": \"origins:heal\",\n        \"amount\": 6\n    }\n}\n```\n\nThis example will set the entity on fire for 5 seconds if they are \"fall flying\". Otherwise, it will restore 3 hearts of health to the entity instead.\n"
					}
				}
			}
		},
		{
			"if": {
				"required": [
					"type"
				],
				"properties": {
					"type": {
						"enum": [
							"apoli:if_else_list",
							"origins:if_else_list"
						]
					}
				}
			},
			"then": {
				"type": "object",
				"required": [
					"actions"
				],
				"properties": {
					"actions": {
						"type": "array",
						"items": {
							"type": "object",
							"required": [
								"action",
								"condition"
							],
							"properties": {
								"action": {
									"$ref": "#"
								},
								"condition": {
									"$ref": "block_condition.json"
								}
							}
						},
						"description": "Each object has to have an `action` [Action Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/if_else_list) object and a `condition` [Condition Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/if_else_list) object.",
						"markdownDescription": "Each object has to have an `action` [Action Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/if_else_list) object and a `condition` [Condition Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/if_else_list) object."
					},
					"type": {
						"description": "## If-Else List\n\n---\n\n\n\n[Meta Action Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/if_else_list)\n\nChecks a list of actions associated with conditions, and executes the first one in the list for which the condition holds. Basically a less indentation-heavy way to represent a deeply nested [If-Else (Meta Action Type)](https://origins.readthedocs.io/en/latest/types/meta_action_types/if_else_list).\n\nType ID: `origins:if_else_list`\n\n\n\n---\n\n### üìù Note\n\nDepending on the condition type, a different action type is expected:\n\n\n    \n    Action Type | Condition Type\n    ------------|----------------\n    [Bi-entity Action Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/if_else_list) | [Bi-entity Condition Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/if_else_list)\n    [Entity Action Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/if_else_list) | [Entity Condition Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/if_else_list)\n    [Block Action Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/if_else_list) | [Block Condition Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/if_else_list)\n    [Item Action Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/if_else_list) | [Item Condition Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/if_else_list)\n\n\n\n\n\n---\n\n### Examples\n\n```json\n\"entity_action\": {\n\t\"type\": \"origins:if_else_list\",\n\t\"actions\": [\n\t\t{\n\t\t\t\"condition\": {\n\t\t\t\t\"type\": \"origins:health\",\n\t\t\t\t\"comparison\": \"<=\",\n\t\t\t\t\"compare_to\": 6\n\t\t\t},\n\t\t\t\"action\": {\n\t\t\t\t\"type\": \"origins:apply_effect\",\n\t\t\t\t\"effect\": {\n\t\t\t\t\t\"effect\": \"minecraft:speed\",\n\t\t\t\t\t\"amplifier\": 2,\n\t\t\t\t\t\"duration\": 80\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"condition\": {\n\t\t\t\t\"type\": \"origins:health\",\n\t\t\t\t\"comparison\": \"<=\",\n\t\t\t\t\"compare_to\": 12\n\t\t\t},\n\t\t\t\"action\": {\n\t\t\t\t\"type\": \"origins:apply_effect\",\n\t\t\t\t\"effect\": {\n\t\t\t\t\t\"effect\": \"minecraft:speed\",\n\t\t\t\t\t\"amplifier\": 1,\n\t\t\t\t\t\"duration\": 80\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"condition\": {\n\t\t\t\t\"type\": \"origins:health\",\n\t\t\t\t\"comparison\": \"<=\",\n\t\t\t\t\"compare_to\": 18\n\t\t\t},\n\t\t\t\"action\": {\n\t\t\t\t\"type\": \"origins:apply_effect\",\n\t\t\t\t\"effect\": {\n\t\t\t\t\t\"effect\": \"minecraft:speed\",\n\t\t\t\t\t\"amplifier\": 0,\n\t\t\t\t\t\"duration\": 80\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t]\n}\n```\n\nThis example will apply a stronger Speed status effect the lower the entity's health is, in three stages (<= 3 hearts, <= 6 hearts or <= 9 hearts).\n",
						"markdownDescription": "undefined## If-Else List\n\n---\n\n\n\n[Meta Action Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/if_else_list)\n\nChecks a list of actions associated with conditions, and executes the first one in the list for which the condition holds. Basically a less indentation-heavy way to represent a deeply nested [If-Else (Meta Action Type)](https://origins.readthedocs.io/en/latest/types/meta_action_types/if_else_list).\n\nType ID: `origins:if_else_list`\n\n\n\n---\n\n### üìù Note\n\nDepending on the condition type, a different action type is expected:\n\n\n    \n    Action Type | Condition Type\n    ------------|----------------\n    [Bi-entity Action Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/if_else_list) | [Bi-entity Condition Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/if_else_list)\n    [Entity Action Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/if_else_list) | [Entity Condition Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/if_else_list)\n    [Block Action Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/if_else_list) | [Block Condition Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/if_else_list)\n    [Item Action Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/if_else_list) | [Item Condition Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/if_else_list)\n\n\n\n\n\n---\n\n### Examples\n\n```json\n\"entity_action\": {\n\t\"type\": \"origins:if_else_list\",\n\t\"actions\": [\n\t\t{\n\t\t\t\"condition\": {\n\t\t\t\t\"type\": \"origins:health\",\n\t\t\t\t\"comparison\": \"<=\",\n\t\t\t\t\"compare_to\": 6\n\t\t\t},\n\t\t\t\"action\": {\n\t\t\t\t\"type\": \"origins:apply_effect\",\n\t\t\t\t\"effect\": {\n\t\t\t\t\t\"effect\": \"minecraft:speed\",\n\t\t\t\t\t\"amplifier\": 2,\n\t\t\t\t\t\"duration\": 80\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"condition\": {\n\t\t\t\t\"type\": \"origins:health\",\n\t\t\t\t\"comparison\": \"<=\",\n\t\t\t\t\"compare_to\": 12\n\t\t\t},\n\t\t\t\"action\": {\n\t\t\t\t\"type\": \"origins:apply_effect\",\n\t\t\t\t\"effect\": {\n\t\t\t\t\t\"effect\": \"minecraft:speed\",\n\t\t\t\t\t\"amplifier\": 1,\n\t\t\t\t\t\"duration\": 80\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"condition\": {\n\t\t\t\t\"type\": \"origins:health\",\n\t\t\t\t\"comparison\": \"<=\",\n\t\t\t\t\"compare_to\": 18\n\t\t\t},\n\t\t\t\"action\": {\n\t\t\t\t\"type\": \"origins:apply_effect\",\n\t\t\t\t\"effect\": {\n\t\t\t\t\t\"effect\": \"minecraft:speed\",\n\t\t\t\t\t\"amplifier\": 0,\n\t\t\t\t\t\"duration\": 80\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t]\n}\n```\n\nThis example will apply a stronger Speed status effect the lower the entity's health is, in three stages (<= 3 hearts, <= 6 hearts or <= 9 hearts).\n"
					}
				}
			}
		},
		{
			"if": {
				"required": [
					"type"
				],
				"properties": {
					"type": {
						"enum": [
							"apoli:nothing",
							"origins:nothing"
						]
					}
				}
			},
			"then": {
				"type": "object",
				"properties": {
					"type": {
						"description": "## Nothing\n\n---\n\n\n\n[Meta Action Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/nothing)\n\nDoes nothing. Can be used as a backup in case an action is not optional in some place.\n\nType ID: `origins:nothing`\n\n\n\n\n---\n\n### Examples\n\n```json\n\"entity_action\": {\n    \"type\": \"origins:nothing\"\n}\n```\n\nThis example does... nothing.\n<br>\n\n```json\n\"bientity_action\": {\n    \"type\": \"origins:nothing\"\n}\n```\n\nThis example... also does nothing.\n",
						"markdownDescription": "undefined## Nothing\n\n---\n\n\n\n[Meta Action Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/nothing)\n\nDoes nothing. Can be used as a backup in case an action is not optional in some place.\n\nType ID: `origins:nothing`\n\n\n\n\n---\n\n### Examples\n\n```json\n\"entity_action\": {\n    \"type\": \"origins:nothing\"\n}\n```\n\nThis example does... nothing.\n<br>\n\n```json\n\"bientity_action\": {\n    \"type\": \"origins:nothing\"\n}\n```\n\nThis example... also does nothing.\n"
					}
				}
			}
		},
		{
			"if": {
				"required": [
					"type"
				],
				"properties": {
					"type": {
						"enum": [
							"apoli:side",
							"origins:side"
						]
					}
				}
			},
			"then": {
				"type": "object",
				"required": [
					"action",
					"side"
				],
				"properties": {
					"action": {
						"$ref": "#",
						"description": "The action to execute.",
						"markdownDescription": "The action to execute."
					},
					"side": {
						"$ref": "types/side.json",
						"description": "Determines where to execute the specified action type. Accepts `\"client\"` or `\"server\"`",
						"markdownDescription": "Determines where to execute the specified action type. Accepts `\"client\"` or `\"server\"`"
					},
					"type": {
						"description": "## Side\n\n---\n\n\n\n[Meta Action Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/side)\n\nExecutes the specified action type on the specified \"side\".\n\n\n\n\n---\n\n### Examples\n\n\n```json\n\"entity_action\": {\n    \"type\": \"origins:side\",\n    \"action\": {\n        \"type\": \"origins:change_resource\",\n        \"resource\": \"example:resource\",\n        \"change\": 1\n    },\n    \"side\": \"client\"\n}\n```\n\nThis example will add 1 to the `example:resource` power on the client-side.\n",
						"markdownDescription": "undefined## Side\n\n---\n\n\n\n[Meta Action Type](https://origins.readthedocs.io/en/latest/types/meta_action_types/side)\n\nExecutes the specified action type on the specified \"side\".\n\n\n\n\n---\n\n### Examples\n\n\n```json\n\"entity_action\": {\n    \"type\": \"origins:side\",\n    \"action\": {\n        \"type\": \"origins:change_resource\",\n        \"resource\": \"example:resource\",\n        \"change\": 1\n    },\n    \"side\": \"client\"\n}\n```\n\nThis example will add 1 to the `example:resource` power on the client-side.\n"
					}
				}
			}
		},
		{
			"if": {
				"required": [
					"type"
				],
				"properties": {
					"type": {
						"const": "apugli:destroy"
					}
				}
			},
			"then": {
				"$ref": "../apugli/block_action_types/destroy.json"
			}
		},
		{
			"if": {
				"required": [
					"type"
				],
				"properties": {
					"type": {
						"const": "apugli:light_up"
					}
				}
			},
			"then": {
				"$ref": "../apugli/block_action_types/light_up.json"
			}
		},
		{
			"if": {
				"required": [
					"type"
				],
				"properties": {
					"type": {
						"const": "apugli:schedule_tick"
					}
				}
			},
			"then": {
				"$ref": "../apugli/block_action_types/schedule_tick.json"
			}
		}
	],
	"properties": {
		"type": {
			"description": "## Block Action Types\n\n---\n\n\n\nBlock Action Types operate an action at a selected block or set of blocks. These are available to power/action types that provides a `block_action` object field.\n\n\n\n\n---\n\n",
			"markdownDescription": "undefined## Block Action Types\n\n---\n\n\n\nBlock Action Types operate an action at a selected block or set of blocks. These are available to power/action types that provides a `block_action` object field.\n\n\n\n\n---\n\n"
		}
	}
}