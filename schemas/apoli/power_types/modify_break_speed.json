{
	"type": "object",
	"properties": {
		"block_condition": {
			"$ref": "../block_condition.json",
			"description": "If specified, the modifier(s) will only apply to the blocks that fulfills this condition.",
			"markdownDescription": "If specified, the modifier(s) will only apply to the blocks that fulfills this condition."
		},
		"modifier": {
			"$ref": "../types/attribute_modifier_arrayable.json",
			"description": "If specified, this modifier will be applied to the break speed.",
			"markdownDescription": "If specified, this modifier will be applied to the break speed."
		},
		"modifiers": {
			"type": "array",
			"items": {
				"$ref": "../types/attribute_modifier_arrayable.json"
			},
			"description": "If specified, these modifiers will be applied to the break speed.",
			"markdownDescription": "If specified, these modifiers will be applied to the break speed."
		},
		"hardness_modifier": {
			"$ref": "../types/attribute_modifier_arrayable.json",
			"description": "If specified, this modifier will be applied to the *effective* hardness value of the block while calculating the block's break speed.",
			"markdownDescription": "If specified, this modifier will be applied to the *effective* hardness value of the block while calculating the block's break speed."
		},
		"hardness_modifiers": {
			"type": "array",
			"items": {
				"$ref": "../types/attribute_modifier_arrayable.json"
			},
			"description": "If specified, these modifiers will be applied to the *effective* hardness value of the block while calculating the block's break speed.",
			"markdownDescription": "If specified, these modifiers will be applied to the *effective* hardness value of the block while calculating the block's break speed."
		},
		"type": {
			"description": "## Modify Break Speed\n\n---\n\n\n\n[Power Type](https://origins.readthedocs.io/en/latest/types/power_types/modify_break_speed)\n\nModifies how fast the player that has the power can break blocks.\n\nType ID: `origins:modify_break_speed`\n\n\n\n\n---\n\n### Examples\n\n```json\n{\n\t\"type\": \"origins:modify_break_speed\",\n\t\"block_condition\": {\n\t\t\"type\": \"origins:block\",\n\t\t\"block\": \"minecraft:netherrack\"\n\t},\n\t\"modifier\": {\n\t\t\"operation\": \"multiply_base\",\n\t\t\"value\": 0.5\n\t}\n}\n```\n\nThis example will allow the player to break Netherrack 50% faster than usual.\n<br>\n\n```json\n{\n\t\"type\": \"origins:modify_break_speed\",\n\t\"modifier\": {\n\t\t\"operation\": \"multiply_base\",\n\t\t\"value\": -0.9\n\t},\n\t\"hardness_modifiers\": [\n\t\t{\n\t\t\t\"operation\": \"max_total\",\n\t\t\t\"value\": -1.0\n\t\t},\n\t\t{\n\t\t\t\"operation\": \"min_total\",\n\t\t\t\"value\": 0.1\n\t\t}\n\t]\n}\n```\n\nThis example will make the player break blocks 90% slower than usual, which also applies to blocks that can be mined instantly (which is handled by assigning a minimum value of `0.1` if the hardness value of the block is `0`, which is the case for such blocks.)\n",
			"markdownDescription": "undefined## Modify Break Speed\n\n---\n\n\n\n[Power Type](https://origins.readthedocs.io/en/latest/types/power_types/modify_break_speed)\n\nModifies how fast the player that has the power can break blocks.\n\nType ID: `origins:modify_break_speed`\n\n\n\n\n---\n\n### Examples\n\n```json\n{\n\t\"type\": \"origins:modify_break_speed\",\n\t\"block_condition\": {\n\t\t\"type\": \"origins:block\",\n\t\t\"block\": \"minecraft:netherrack\"\n\t},\n\t\"modifier\": {\n\t\t\"operation\": \"multiply_base\",\n\t\t\"value\": 0.5\n\t}\n}\n```\n\nThis example will allow the player to break Netherrack 50% faster than usual.\n<br>\n\n```json\n{\n\t\"type\": \"origins:modify_break_speed\",\n\t\"modifier\": {\n\t\t\"operation\": \"multiply_base\",\n\t\t\"value\": -0.9\n\t},\n\t\"hardness_modifiers\": [\n\t\t{\n\t\t\t\"operation\": \"max_total\",\n\t\t\t\"value\": -1.0\n\t\t},\n\t\t{\n\t\t\t\"operation\": \"min_total\",\n\t\t\t\"value\": 0.1\n\t\t}\n\t]\n}\n```\n\nThis example will make the player break blocks 90% slower than usual, which also applies to blocks that can be mined instantly (which is handled by assigning a minimum value of `0.1` if the hardness value of the block is `0`, which is the case for such blocks.)\n"
		}
	}
}