{
	"type": "object",
	"properties": {
		"bientity_condition": {
			"$ref": "../bientity_condition.json",
			"description": "If specified, the collision will only be prevented if this condition is fulfilled by either or both '**actor**' and '**target**' entities.",
			"markdownDescription": "If specified, the collision will only be prevented if this condition is fulfilled by either or both '**actor**' and '**target**' entities."
		},
		"type": {
			"description": "\n\n[Power Type](../power_types.md)\n\nPrevents the entity that has the power from colliding with other entities.\n\nType ID: `origins:prevent_entity_collision`\n\n\n!!! note\n\n    In the context of this power type, the '**actor**' entity is the entity that has the power whilst the '**target**' entity is the entity that was collided with.\n    \n\n!!! caution\n\n    Currently, this power type does not prevent collisions of certain entities that have solid hitboxes, such as Boats and Shulkers.\n\n\n",
			"markdownDescription": "\n\n[Power Type](../power_types.md)\n\nPrevents the entity that has the power from colliding with other entities.\n\nType ID: `origins:prevent_entity_collision`\n\n\n!!! note\n\n    In the context of this power type, the '**actor**' entity is the entity that has the power whilst the '**target**' entity is the entity that was collided with.\n    \n\n!!! caution\n\n    Currently, this power type does not prevent collisions of certain entities that have solid hitboxes, such as Boats and Shulkers.\n\n\n"
		}
	}
}