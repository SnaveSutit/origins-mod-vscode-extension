{
	"type": "object",
	"properties": {
		"type": {
			"description": "[Power Type](https://origins.readthedocs.io/en/latest/types/power_types/)\n\nAllows for defining more than one power in a single file.\n\nType ID: `origins:multiple`\n\n\n!!! note\n\n    The sub-powers are automatically hidden. When the super-power (where the `origins:multiple` power type is used) is added to the entity, all sub-powers are added automatically.\n\n\n!!! note\n\n    You can reference sub-powers by using the ID of the super-power and the ID of the sub-power, split by an underscore (`_`).\n    (e.g: `namespace:super-power_sub-power`)\n\n\n!!! caution\n\n    If you wish to check for an entity condition for the entire super-power, you would have to check for the said entity condition in every sub-power of the super-power.## Multiple\n\n---\n\n\n\n[Power Type](https://origins.readthedocs.io/en/latest/types/power_types/multiple)\n\nAllows for defining more than one power in a single file.\n\nType ID: `origins:multiple`\n\n\n\n\n---\n\n### üìù Note\n\nThe sub-powers are automatically hidden. When the super-power (where the `origins:multiple` power type is used) is added to the entity, all sub-powers are added automatically.\n\n\n\n\n\n\n---\n\n### üìù Note\n\nYou can reference sub-powers by using the ID of the super-power and the ID of the sub-power, split by an underscore (`_`).\n\n\n    (e.g: `namespace:super-power_sub-power`)\n\n\n\n\n---\n\n### ‚ö†Ô∏è Caution\n\nIf you wish to check for an entity condition for the entire super-power, you would have to check for the said entity condition in every sub-power of the super-power.\n\n\n\n\n\n\n---\n\n### Examples\n\n```json\n{\n\n    \"type\": \"origins:multiple\",\n\n    \"toggle\": {\n        \"type\": \"origins:toggle\",\n        \"active_by_default\": false,\n        \"key\": {\n            \"key\": \"key.origins.secondary_active\"\n        }\n    },\n\n    \"invisibility\": {\n        \"type\": \"origins:invisibility\",\n        \"render_armor\": false,\n        \"condition\": {\n            \"type\": \"origins:power_active\",\n            \"power\": \"*:*_toggle\"\n        }\n    }\n\n}\n```\n\nThis example super-power has two \"keys\", which are considered sub-powers: `toggle` and `invisibility`. The `invisibility` sub-power will only be active *(e.g: make the entity invisible)* if the `toggle` sub-power is toggled ON.\n",
			"markdownDescription": "[Power Type](https://origins.readthedocs.io/en/latest/types/power_types/)\n\nAllows for defining more than one power in a single file.\n\nType ID: `origins:multiple`\n\n\n!!! note\n\n    The sub-powers are automatically hidden. When the super-power (where the `origins:multiple` power type is used) is added to the entity, all sub-powers are added automatically.\n\n\n!!! note\n\n    You can reference sub-powers by using the ID of the super-power and the ID of the sub-power, split by an underscore (`_`).\n    (e.g: `namespace:super-power_sub-power`)\n\n\n!!! caution\n\n    If you wish to check for an entity condition for the entire super-power, you would have to check for the said entity condition in every sub-power of the super-power.## Multiple\n\n---\n\n\n\n[Power Type](https://origins.readthedocs.io/en/latest/types/power_types/multiple)\n\nAllows for defining more than one power in a single file.\n\nType ID: `origins:multiple`\n\n\n\n\n---\n\n### üìù Note\n\nThe sub-powers are automatically hidden. When the super-power (where the `origins:multiple` power type is used) is added to the entity, all sub-powers are added automatically.\n\n\n\n\n\n\n---\n\n### üìù Note\n\nYou can reference sub-powers by using the ID of the super-power and the ID of the sub-power, split by an underscore (`_`).\n\n\n    (e.g: `namespace:super-power_sub-power`)\n\n\n\n\n---\n\n### ‚ö†Ô∏è Caution\n\nIf you wish to check for an entity condition for the entire super-power, you would have to check for the said entity condition in every sub-power of the super-power.\n\n\n\n\n\n\n---\n\n### Examples\n\n```json\n{\n\n    \"type\": \"origins:multiple\",\n\n    \"toggle\": {\n        \"type\": \"origins:toggle\",\n        \"active_by_default\": false,\n        \"key\": {\n            \"key\": \"key.origins.secondary_active\"\n        }\n    },\n\n    \"invisibility\": {\n        \"type\": \"origins:invisibility\",\n        \"render_armor\": false,\n        \"condition\": {\n            \"type\": \"origins:power_active\",\n            \"power\": \"*:*_toggle\"\n        }\n    }\n\n}\n```\n\nThis example super-power has two \"keys\", which are considered sub-powers: `toggle` and `invisibility`. The `invisibility` sub-power will only be active *(e.g: make the entity invisible)* if the `toggle` sub-power is toggled ON.\n"
		}
	},
	"patternProperties": {
		"^(?!(type|hidden|badges|description|loading_priority|name|condition)$)[a-z0-9_\\/\\-\\.]+$": {
			"$ref": "../sub_power.json",
			"description": "Any \"key\", except for `hidden` and `type`, is considered a sub-power and takes a fully-defined power type as the value.",
			"markdownDescription": "Any \"key\", except for `hidden` and `type`, is considered a sub-power and takes a fully-defined power type as the value."
		}
	}
}