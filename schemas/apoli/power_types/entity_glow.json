{
	"type": "object",
	"properties": {
		"entity_condition": {
			"$ref": "../entity_condition.json",
			"description": "If specified, only entities which fulfill this condition will glow for the player that has the power.",
			"markdownDescription": "If specified, only entities which fulfill this condition will glow for the player that has the power."
		},
		"bientity_condition": {
			"$ref": "../bientity_condition.json",
			"description": "If specified, the power will only be active if this condition is fulfilled by either or both the 'actor' (the player that has the power) and 'target' (the entity that would glow) entities.",
			"markdownDescription": "If specified, the power will only be active if this condition is fulfilled by either or both the 'actor' (the player that has the power) and 'target' (the entity that would glow) entities."
		},
		"use_teams": {
			"type": "boolean",
			"default": true,
			"description": "Determines whether glowing entities should use their team's color with their glow. If set to false, the entity will instead use the `red`, `green` and `blue` fields within this power type.",
			"markdownDescription": "Determines whether glowing entities should use their team's color with their glow. If set to false, the entity will instead use the `red`, `green` and `blue` fields within this power type."
		},
		"red": {
			"type": "number",
			"default": 1,
			"description": "Value by which the red component of the glow will be multiplied. Range: 0.0 - 1.0.",
			"markdownDescription": "Value by which the red component of the glow will be multiplied. Range: 0.0 - 1.0."
		},
		"green": {
			"type": "number",
			"default": 1,
			"description": "Value by which the green component of the glow will be multiplied. Range: 0.0 - 1.0.",
			"markdownDescription": "Value by which the green component of the glow will be multiplied. Range: 0.0 - 1.0."
		},
		"blue": {
			"type": "number",
			"default": 1,
			"description": "Value by which the blue component of the glow will be multiplied. Range: 0.0 - 1.0.",
			"markdownDescription": "Value by which the blue component of the glow will be multiplied. Range: 0.0 - 1.0."
		},
		"type": {
			"description": "## Entity Glow\n\n---\n\n\n\n[Power Type](https://origins.readthedocs.io/en/latest/types/power_types/entity_glow)\n\nMakes other entities glow (as with the glowing status effect), but only for the player that has the power.\n\nType ID: `origins:entity_glow`\n\n\n\n---\n\n### üìù Note\n\nYou can use a color picker website and divide the RGB values by 255 to get the values *(e.g: ranging from 0.0 to 1.0)* to be used for the power type.\n\n\n\n\n\n---\n\n### ‚ö†Ô∏è Caution\n\nThe conditions specified in the `entity_condition` and `bientity_condition` fields are only evaluated on the <span style=\"color:goldenrod\"><b>client-side</b></span>, therefore, using condition types that only operates on the server-side will not work.\n\n\n\n\n\n\n---\n\n### Examples\n\n```json\n{\n\t\"type\": \"origins:entity_glow\",\n    \"entity_condition\": {\n      \t\"type\": \"origins:and\",\n      \t\"conditions\": [\n        \t{\n          \t\t\"type\": \"origins:in_block_anywhere\",\n          \t\t\"block_condition\": {\n            \t\t\"type\": \"origins:in_tag\",\n            \t\t\"tag\": \"origins:cobwebs\"\n          \t\t}\n        \t},\n        \t{\n          \t\t\"type\": \"origins:entity_group\",\n          \t\t\"group\": \"arthropod\",\n          \t\t\"inverted\": true\n        \t}\n      \t]\n    }\n}\n```\n\nThis example will make all entities which are not arthropods glow when they're in cobwebs. The glow is the same color as the entity's team.\n<br>\n\n```json\n{\n\t\"type\": \"origins:entity_glow\",\n    \"bientity_condition\": {\n\t\t\"type\": \"origins:can_see\"\n\t},\n\t\"use_teams\": false,\n\t\"red\": 0.0,\n\t\"green\": 1.0,\n\t\"blue\": 0.0\n}\n```\n\nThis example will make all entities that the player is able to see glow with a green glow.\n",
			"markdownDescription": "undefined## Entity Glow\n\n---\n\n\n\n[Power Type](https://origins.readthedocs.io/en/latest/types/power_types/entity_glow)\n\nMakes other entities glow (as with the glowing status effect), but only for the player that has the power.\n\nType ID: `origins:entity_glow`\n\n\n\n---\n\n### üìù Note\n\nYou can use a color picker website and divide the RGB values by 255 to get the values *(e.g: ranging from 0.0 to 1.0)* to be used for the power type.\n\n\n\n\n\n---\n\n### ‚ö†Ô∏è Caution\n\nThe conditions specified in the `entity_condition` and `bientity_condition` fields are only evaluated on the <span style=\"color:goldenrod\"><b>client-side</b></span>, therefore, using condition types that only operates on the server-side will not work.\n\n\n\n\n\n\n---\n\n### Examples\n\n```json\n{\n\t\"type\": \"origins:entity_glow\",\n    \"entity_condition\": {\n      \t\"type\": \"origins:and\",\n      \t\"conditions\": [\n        \t{\n          \t\t\"type\": \"origins:in_block_anywhere\",\n          \t\t\"block_condition\": {\n            \t\t\"type\": \"origins:in_tag\",\n            \t\t\"tag\": \"origins:cobwebs\"\n          \t\t}\n        \t},\n        \t{\n          \t\t\"type\": \"origins:entity_group\",\n          \t\t\"group\": \"arthropod\",\n          \t\t\"inverted\": true\n        \t}\n      \t]\n    }\n}\n```\n\nThis example will make all entities which are not arthropods glow when they're in cobwebs. The glow is the same color as the entity's team.\n<br>\n\n```json\n{\n\t\"type\": \"origins:entity_glow\",\n    \"bientity_condition\": {\n\t\t\"type\": \"origins:can_see\"\n\t},\n\t\"use_teams\": false,\n\t\"red\": 0.0,\n\t\"green\": 1.0,\n\t\"blue\": 0.0\n}\n```\n\nThis example will make all entities that the player is able to see glow with a green glow.\n"
		}
	}
}