{
	"type": "object",
	"properties": {
		"bientity_action": {
			"$ref": "../bientity_action.json",
			"description": "If specified, this action will be executed on either or both the '*_actor_*' and '*_target_*' entities.",
			"markdownDescription": "If specified, this action will be executed on either or both the '*_actor_*' and '*_target_*' entities."
		},
		"held_item_action": {
			"$ref": "../item_action.json",
			"description": "If specified, this action will be executed on the item used by the '*_actor_*' entity for right-clicking the '*_target_*' entity.",
			"markdownDescription": "If specified, this action will be executed on the item used by the '*_actor_*' entity for right-clicking the '*_target_*' entity."
		},
		"result_item_action": {
			"$ref": "../item_action.json",
			"description": "If specified, this action will be executed on the item that is given to the '*_actor_*' entity.",
			"markdownDescription": "If specified, this action will be executed on the item that is given to the '*_actor_*' entity."
		},
		"bientity_condition": {
			"$ref": "../bientity_condition.json",
			"description": "If specified, the specified actions will only be executed if this condition is fulfilled by either or both '*_actor_*' and '*_target_*' entities.",
			"markdownDescription": "If specified, the specified actions will only be executed if this condition is fulfilled by either or both '*_actor_*' and '*_target_*' entities."
		},
		"item_condition": {
			"$ref": "../item_condition.json",
			"description": "If specified, the specified actions will only be executed if this condition is fulfilled by the item used by the '*_actor_*' entity for right-clicking the '*_target_*' entity.",
			"markdownDescription": "If specified, the specified actions will only be executed if this condition is fulfilled by the item used by the '*_actor_*' entity for right-clicking the '*_target_*' entity."
		},
		"hands": {
			"$ref": "../types/hands.json",
			"description": "Determines if the power should be activated if the '*_actor_*' entity used the specified hand(s). Accepts `\"off_hand\"`, `\"main_hand\"` or both.",
			"markdownDescription": "Determines if the power should be activated if the '*_actor_*' entity used the specified hand(s). Accepts `\"off_hand\"`, `\"main_hand\"` or both."
		},
		"result_stack": {
			"$ref": "../types/item_stack.json",
			"description": "If specified, this item stack will be given to the '*_actor_*' entity.",
			"markdownDescription": "If specified, this item stack will be given to the '*_actor_*' entity."
		},
		"type": {
			"description": "## Prevent Entity Use\n\n---\n\n\n\n[Power Type](https://origins.readthedocs.io/en/latest/types/power_types/prevent_entity_use)\n\nPrevents the player that has the power from \"using\" (right-clicking) an entity and executes a bi-entity action, item action and/or give an item upon being prevented.\n\nType ID: `origins:prevent_entity_use`\n\n\n\n---\n\n### üìù Note\n\nIn the context of this power type, the '__actor__' entity is the entity that has the power whilst the '__target__' entity is the entity that was \"used\" (right-clicked).\n\n\n\n\n\n\n---\n\n### Examples\n\n```json\n{\n    \"type\": \"origins:prevent_entity_use\",\n    \"bientity_action\": {\n        \"type\": \"origins:actor_action\",\n        \"action\": {\n            \"type\": \"origins:execute_command\",\n            \"command\": \"title @s actionbar {\\\"text\\\": \\\"Cannot interact with pigs!\\\", \\\"color\\\": \\\"red\\\"}\"\n        }\n    },\n    \"bientity_condition\": {\n        \"type\": \"origins:target_condition\",\n        \"condition\": {\n            \"type\": \"origins:entity_type\",\n            \"entity_type\": \"minecraft:pig\"\n        }\n    }\n}\n```\n\nThis example will prevent the player that has the power from interacting with a Pig (also prevent powers that enables you to interact with a Pig) and executes an [Execute Command (Entity Action Type)](https://origins.readthedocs.io/en/latest/types/power_types/prevent_entity_use) to the entity that has attempted to interact with a Pig.\n",
			"markdownDescription": "undefined## Prevent Entity Use\n\n---\n\n\n\n[Power Type](https://origins.readthedocs.io/en/latest/types/power_types/prevent_entity_use)\n\nPrevents the player that has the power from \"using\" (right-clicking) an entity and executes a bi-entity action, item action and/or give an item upon being prevented.\n\nType ID: `origins:prevent_entity_use`\n\n\n\n---\n\n### üìù Note\n\nIn the context of this power type, the '__actor__' entity is the entity that has the power whilst the '__target__' entity is the entity that was \"used\" (right-clicked).\n\n\n\n\n\n\n---\n\n### Examples\n\n```json\n{\n    \"type\": \"origins:prevent_entity_use\",\n    \"bientity_action\": {\n        \"type\": \"origins:actor_action\",\n        \"action\": {\n            \"type\": \"origins:execute_command\",\n            \"command\": \"title @s actionbar {\\\"text\\\": \\\"Cannot interact with pigs!\\\", \\\"color\\\": \\\"red\\\"}\"\n        }\n    },\n    \"bientity_condition\": {\n        \"type\": \"origins:target_condition\",\n        \"condition\": {\n            \"type\": \"origins:entity_type\",\n            \"entity_type\": \"minecraft:pig\"\n        }\n    }\n}\n```\n\nThis example will prevent the player that has the power from interacting with a Pig (also prevent powers that enables you to interact with a Pig) and executes an [Execute Command (Entity Action Type)](https://origins.readthedocs.io/en/latest/types/power_types/prevent_entity_use) to the entity that has attempted to interact with a Pig.\n"
		}
	}
}