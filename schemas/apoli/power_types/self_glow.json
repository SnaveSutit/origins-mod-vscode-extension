{
	"type": "object",
	"properties": {
		"entity_condition": {
			"$ref": "../entity_condition.json",
			"description": "If specified, only entities that fulfills this condition will see the entity that has the power glow.",
			"markdownDescription": "If specified, only entities that fulfills this condition will see the entity that has the power glow."
		},
		"bientity_condition": {
			"$ref": "../bientity_condition.json",
			"description": "If set, only entities which fulfill this bi-entity condition in relation to the entity that has the power will see the entity that has the power glow.",
			"markdownDescription": "If set, only entities which fulfill this bi-entity condition in relation to the entity that has the power will see the entity that has the power glow."
		},
		"use_teams": {
			"type": "boolean",
			"default": true,
			"description": "Determines whether glowing entities should use their team's color with their glow. If set to false, the entity will instead use the `red`, `green` and `blue` fields within this power type.",
			"markdownDescription": "Determines whether glowing entities should use their team's color with their glow. If set to false, the entity will instead use the `red`, `green` and `blue` fields within this power type."
		},
		"red": {
			"type": "number",
			"default": 1,
			"description": "Value by which the red component of the glow will be multiplied. Range: 0.0 - 1.0.",
			"markdownDescription": "Value by which the red component of the glow will be multiplied. Range: 0.0 - 1.0."
		},
		"green": {
			"type": "number",
			"default": 1,
			"description": "Value by which the green component of the glow will be multiplied. Range: 0.0 - 1.0.",
			"markdownDescription": "Value by which the green component of the glow will be multiplied. Range: 0.0 - 1.0."
		},
		"blue": {
			"type": "number",
			"default": 1,
			"description": "Value by which the blue component of the glow will be multiplied. Range: 0.0 - 1.0.",
			"markdownDescription": "Value by which the blue component of the glow will be multiplied. Range: 0.0 - 1.0."
		},
		"type": {
			"description": "## Self Glow\n\n---\n\n\n\n[Power Type](https://origins.readthedocs.io/en/latest/types/power_types/self_glow)\n\nMakes the entity that has the power glow if certain conditions are met.\n\nType ID: `origins:self_glow`\n\n\n\n---\n\n### üìù Note\n\nYou can use a color picker website and divide the RGB values by 255 to get the values *(e.g: ranging from 0.0 to 1.0)* to be used for the power type.\n\n\n\n\n\n---\n\n### ‚ö†Ô∏è Caution\n\nThe conditions specified in the `entity_condition` and `bientity_condition` fields are only evaluated on the <span style=\"color:goldenrod\"><b>client-side</b></span>, therefore, using any condition types that only work on the server-side will not work.\n\n\n\n\n\n\n---\n\n### Examples\n\n```json\n{\n    \"type\": \"origins:self_glow\",\n    \"use_teams\": false,\n    \"red\": 0.56862745098,\n    \"green\": 0.89019607843,\n    \"blue\": 0.65098039215,\n    \"condition\": {\n        \"type\": \"origins:in_rain\"\n    }\n}\n```\n\nThis example will make the entity that has the power glow for everyone if the entity in question is in rain.\n<br>\n\n```json\n{\n    \"type\": \"origins:self_glow\",\n    \"bientity_condition\": {\n        \"type\": \"origins:can_see\"\n    },\n    \"use_teams\": false,\n    \"red\": 1.0,\n    \"green\": 0.0,\n    \"blue\": 0.0\n}\n```\n\nThis example will make the entity that has the power glow for the entity that can see the said entity.\n",
			"markdownDescription": "undefined## Self Glow\n\n---\n\n\n\n[Power Type](https://origins.readthedocs.io/en/latest/types/power_types/self_glow)\n\nMakes the entity that has the power glow if certain conditions are met.\n\nType ID: `origins:self_glow`\n\n\n\n---\n\n### üìù Note\n\nYou can use a color picker website and divide the RGB values by 255 to get the values *(e.g: ranging from 0.0 to 1.0)* to be used for the power type.\n\n\n\n\n\n---\n\n### ‚ö†Ô∏è Caution\n\nThe conditions specified in the `entity_condition` and `bientity_condition` fields are only evaluated on the <span style=\"color:goldenrod\"><b>client-side</b></span>, therefore, using any condition types that only work on the server-side will not work.\n\n\n\n\n\n\n---\n\n### Examples\n\n```json\n{\n    \"type\": \"origins:self_glow\",\n    \"use_teams\": false,\n    \"red\": 0.56862745098,\n    \"green\": 0.89019607843,\n    \"blue\": 0.65098039215,\n    \"condition\": {\n        \"type\": \"origins:in_rain\"\n    }\n}\n```\n\nThis example will make the entity that has the power glow for everyone if the entity in question is in rain.\n<br>\n\n```json\n{\n    \"type\": \"origins:self_glow\",\n    \"bientity_condition\": {\n        \"type\": \"origins:can_see\"\n    },\n    \"use_teams\": false,\n    \"red\": 1.0,\n    \"green\": 0.0,\n    \"blue\": 0.0\n}\n```\n\nThis example will make the entity that has the power glow for the entity that can see the said entity.\n"
		}
	}
}