{
	"type": "object",
	"required": [
		"replace"
	],
	"properties": {
		"replace": {
			"type": "object",
			"patternProperties": {
				"^([a-z0-9_\\/\\-\\.]+:)?[a-z0-9_\\/\\-\\.]+$": {
					"$ref": "../types/autocomplete_helpers/loot_table_identifier.json"
				}
			},
			"description": "An object with `\"key\": \"value\"` pairs that determine which loot table (`\"key\"`) will be replaced with a new loot table (`\"value\"`).",
			"markdownDescription": "An object with `\"key\": \"value\"` pairs that determine which loot table (`\"key\"`) will be replaced with a new loot table (`\"value\"`)."
		},
		"bientity_condition": {
			"$ref": "../bientity_condition.json",
			"description": "If specified, the loot tables will only be replaced if this condition is fulfilled by either or both '**actor**' and '**target**' entities.",
			"markdownDescription": "If specified, the loot tables will only be replaced if this condition is fulfilled by either or both '**actor**' and '**target**' entities."
		},
		"block_condition": {
			"$ref": "../block_condition.json",
			"description": "If specified, the loot tables will only be replaced if the block at the context of the loot tables fulfill this condition.",
			"markdownDescription": "If specified, the loot tables will only be replaced if the block at the context of the loot tables fulfill this condition."
		},
		"item_condition": {
			"$ref": "../item_condition.json",
			"description": "If specified, the loot tables will only be replaced if the item in the context of the loot tables fulfill this condition.",
			"markdownDescription": "If specified, the loot tables will only be replaced if the item in the context of the loot tables fulfill this condition."
		},
		"priority": {
			"type": "integer",
			"default": 0,
			"description": "Determines the application priority of the power.",
			"markdownDescription": "Determines the application priority of the power."
		},
		"type": {
			"description": "\n\n[Power Type](https://origins.readthedocs.io/en/latest/types/power_types/replace_loot_table)\n\nReplaces a loot table with another loot table.\n\nType ID: `origins:replace_loot_table`\n\n!!! note\n\n    The keys in the `replace` object field are formatted as a regular expression, where matching loot table namespace, path and IDs will be replaced with the specified value. See [Wikipedia: Regular expression](https://en.wikipedia.org/wiki/Regular_expression) for more information about regular expressions and [RegExr](https://regexr.com/) to test regular expressions online.\n\n!!! note\n\n    In the context of this power type, the '**actor**' entity is the entity that has the power while the '**target**' entity depends on the context of the loot tables that'll be replaced.\n\n    Here's a table for possible instances the '**target**' entity could be:\n\n    Loot Type  | Target Entity\n    -----------|-------\n    Barter     | The Piglin that was bartered with.\n    Block      | The '**actor**' entity that mined the block.\n    Chest      | The '**actor**' entity that opened the Chest.\n    Entity     | The entity that died.\n    Fishing    | The '**actor**' entity's fishing bobber.\n\n\n",
			"markdownDescription": "\n\n[Power Type](https://origins.readthedocs.io/en/latest/types/power_types/replace_loot_table)\n\nReplaces a loot table with another loot table.\n\nType ID: `origins:replace_loot_table`\n\n!!! note\n\n    The keys in the `replace` object field are formatted as a regular expression, where matching loot table namespace, path and IDs will be replaced with the specified value. See [Wikipedia: Regular expression](https://en.wikipedia.org/wiki/Regular_expression) for more information about regular expressions and [RegExr](https://regexr.com/) to test regular expressions online.\n\n!!! note\n\n    In the context of this power type, the '**actor**' entity is the entity that has the power while the '**target**' entity depends on the context of the loot tables that'll be replaced.\n\n    Here's a table for possible instances the '**target**' entity could be:\n\n    Loot Type  | Target Entity\n    -----------|-------\n    Barter     | The Piglin that was bartered with.\n    Block      | The '**actor**' entity that mined the block.\n    Chest      | The '**actor**' entity that opened the Chest.\n    Entity     | The entity that died.\n    Fishing    | The '**actor**' entity's fishing bobber.\n\n\n"
		}
	}
}