{
	"type": "object",
	"required": [
		"property"
	],
	"properties": {
		"property": {
			"type": "string",
			"description": "The name of the property that will be modified. Examples are `facing` or `age`. See [Minecraft Wiki: Block States (List of block states)](https://origins.readthedocs.io/en/latest/types/block_action_types/modify_block_state) for possible values.",
			"markdownDescription": "The name of the property that will be modified. Examples are `facing` or `age`. See [Minecraft Wiki: Block States (List of block states)](https://origins.readthedocs.io/en/latest/types/block_action_types/modify_block_state) for possible values."
		},
		"operation": {
			"enum": [
				"set",
				"add"
			],
			"description": "Determines how the value specified in the `change` field is operated on the specified property. Accepts `\"add\"` or `\"set\"`.",
			"markdownDescription": "Determines how the value specified in the `change` field is operated on the specified property. Accepts `\"add\"` or `\"set\"`."
		},
		"change": {
			"type": "number",
			"description": "If specified, the value to add, remove or set to/from the specified property if the specified property is an integer.",
			"markdownDescription": "If specified, the value to add, remove or set to/from the specified property if the specified property is an integer."
		},
		"value": {
			"type": "boolean",
			"description": "If specified, the boolean to use as the new value for the specified property if the specified property is a boolean.",
			"markdownDescription": "If specified, the boolean to use as the new value for the specified property if the specified property is a boolean."
		},
		"enum": {
			"type": "string",
			"description": "If specified, the string to use as the new value for the specified property if the specified property is a string.",
			"markdownDescription": "If specified, the string to use as the new value for the specified property if the specified property is a string."
		},
		"cycle": {
			"type": "boolean",
			"default": false,
			"description": "If set to true, changes the property to the next state in the cycle, ignoring all other optional fields. All property types can use this operation.",
			"markdownDescription": "If set to true, changes the property to the next state in the cycle, ignoring all other optional fields. All property types can use this operation."
		},
		"type": {
			"description": "## Modify Block State\n\n---\n\n\n\n[Block Action Type](https://origins.readthedocs.io/en/latest/types/block_action_types/modify_block_state)\n\nModifies the block state property of the block. Depending on the property type, different values are expected: boolean properties use `value`, enumeration properties use `enum`, and integer properties use `operation` and `change`.\n\nType ID: `origins:modify_block_state`\n\n\n\n---\n\n### üìù Note\n\nIf none of the expected fields are specified, this action will do nothing.\n\n\n\n\n\n\n---\n\n### Examples\n\n```json\n\"block_action\": {\n\t\"type\": \"origins:modify_block_state\",\n\t\"property\": \"facing\",\n\t\"cycle\": true\n}\n```\n\nThis example will cycle through the values of the `facing` property if available.\n",
			"markdownDescription": "undefined## Modify Block State\n\n---\n\n\n\n[Block Action Type](https://origins.readthedocs.io/en/latest/types/block_action_types/modify_block_state)\n\nModifies the block state property of the block. Depending on the property type, different values are expected: boolean properties use `value`, enumeration properties use `enum`, and integer properties use `operation` and `change`.\n\nType ID: `origins:modify_block_state`\n\n\n\n---\n\n### üìù Note\n\nIf none of the expected fields are specified, this action will do nothing.\n\n\n\n\n\n\n---\n\n### Examples\n\n```json\n\"block_action\": {\n\t\"type\": \"origins:modify_block_state\",\n\t\"property\": \"facing\",\n\t\"cycle\": true\n}\n```\n\nThis example will cycle through the values of the `facing` property if available.\n"
		}
	}
}